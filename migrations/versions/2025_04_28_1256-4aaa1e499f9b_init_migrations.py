"""init migrations

Revision ID: 4aaa1e499f9b
Revises: 
Create Date: 2025-04-28 12:56:23.437062

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4aaa1e499f9b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "course_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=30), nullable=False),
        sa.Column("condition", sa.String(length=120), nullable=False),
        sa.Column("content", sa.String(length=50), nullable=False),
        sa.Column("execution_duration", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("condition"),
        sa.UniqueConstraint("content"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "courses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=30), nullable=False),
        sa.Column("description", sa.String(length=120), nullable=False),
        sa.Column(
            "type",
            sa.Enum("TRAINING", "PROFESSIONAL_DEVELOPMENT", name="coursetype"),
            nullable=False,
        ),
        sa.Column("creation_at", sa.DateTime(), nullable=False),
        sa.Column("last_update_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone_number", sa.CHAR(length=11), nullable=False),
        sa.Column("hashed_password", sa.String(length=256), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("surname", sa.String(length=30), nullable=False),
        sa.Column("patronymic", sa.String(length=30), nullable=True),
        sa.Column(
            "role", sa.Enum("ADMIN", "TRAINER", "USER", name="role"), nullable=False
        ),
        sa.Column("gender", sa.Enum("MALE", "FEMALE", name="gender"), nullable=False),
        sa.Column("trainer_id", sa.Integer(), nullable=True),
        sa.Column(
            "date_of_birth",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("is_regular_client", sa.Boolean(), nullable=False),
        sa.Column("avatar_url", sa.String(length=40), nullable=True),
        sa.Column("creation_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["trainer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number"),
    )
    op.create_table(
        "course_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "courses_tasks",
        sa.Column("course_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["course_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("course_id", "task_id"),
    )
    op.create_table(
        "task_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=False),
        sa.Column("is_correct", sa.Integer(), nullable=False),
        sa.Column("answer_text", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["course_tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=256), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_table(
        "trainer_experiences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(length=1024), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trainer_experiences")
    op.drop_table("tokens")
    op.drop_table("task_results")
    op.drop_table("courses_tasks")
    op.drop_table("course_results")
    op.drop_table("users")
    op.drop_table("courses")
    op.drop_table("course_tasks")
    # ### end Alembic commands ###
